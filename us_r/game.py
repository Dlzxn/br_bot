from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram import Bot, Dispatcher, F
from aiogram import Bot, Dispatcher, F, Router
from aiogram.filters import Command, CommandStart, StateFilter, CommandObject
from aiogram.filters.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.types import (CallbackQuery, InlineKeyboardButton,
                           InlineKeyboardMarkup, Message, PhotoSize)
from dotenv import load_dotenv
import os
import sqlite3
from aiogram.types import FSInputFile
from aiogram.utils.deep_linking import create_start_link, decode_payload
from aiogram import types
import base64
import logging.config
import logging
from random import randint
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardRemove, KeyboardButton, ReplyKeyboardMarkup

from bibleo.bib import sp
from random import randint
from bibleo.sessy import ses, open_sour, base_game, open_panel, prov_igr, my_game, clava_del, clava_st_game, num_u, bucv_otg, prot, bal
from func.defs import top_up, top_up5
import time
import asyncio

router = Router()

server=ses()

us_in_game=[]
#–Ω–µ–∞–∫—Ç–∏–≤
def neact():
    print("fffffffff")
    for i in range(len(base_game)):
        print("fff")
        for i in range(len(base_game)):
            print(base_game[i].time_start)
            if time.time()-base_game[i].time_start>180 and base_game[i].sost==False:
                us1=base_game[i].us1
                us2=base_game[i].us2
                print(us2)
                if us2==None:
                    us2=0
                us_in_game.remove(base_game[i].us1)
                # await bot.send_message(base_game[i].us1, "–í–∞—à–∞ –∏–≥—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                try:
                    # await bot.send_message(base_game[i].us2, "–í–∞—à–∞ –∏–≥—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                    us_in_game.remove(base_game[i].us2)
                except:
                    print("–Ω–µ—Ç 2-–≥–æ —é–∑–µ—Ä–∞")
                base_game.pop(i)
                return us1, us2
    return False, False



@router.message(F.text=="–ò–≥—Ä–∞üéÆ")
async def game(message: Message, bot: Bot):
    l1, l2=neact()
    if l1!=False:
        await bot.send_message(l1, "–í–∞—à–∞ –∏–≥—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        if l2!=0:
            await bot.send_message(l2, "–í–∞—à–∞ –∏–≥—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")

    if prov_igr(base_game, message.from_user.id)==False :
        await message.answer(text=open_panel(base_game),
                         reply_markup=open_sour(base_game))
    else:
        await message.answer(text=my_game(base_game, message.from_user.id),
                             reply_markup=clava_del())

@router.message(F.text=="–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É")
async def create_game(message: Message):
    if len(base_game)<6:
        server=ses()
        server.n_us1=message.from_user.username
        server.us1=message.from_user.id
        server.time_start=time.time()
        base_game.append(server)
        us_in_game.append(message.from_user.id)
        await message.answer(text=f'–í—ã —Å–æ–∑–¥–∞–ª–∏ –∏–≥—Ä—É, –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n',
                             reply_markup=clava_del())
        await message.answer(text=my_game(base_game, message.from_user.id))
    else:
        await message.answer(text="–ù–µ–ª—å—è —Å–æ–∑–¥–∞—Ç—å –±–æ–ª—å—à–µ 6-—Ç–∏ –∏–≥—Ä!")
    #—Ç–∞–π–º–µ—Ä



#–≤—Ö–æ–¥ –≤ –∏–≥—Ä—É —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —é–∑–µ—Ä–∞2
# @router.message(F.text[:4]=="–ò–≥—Ä–∞")
# async def game_in(message: Message):


#–Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã
@router.message(F.text=="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É")
async def start_game(message:Message, bot: Bot):
    n_game=num_u(base_game, message.from_user.id)
    nu=n_game
    if n_game!=52 and base_game[nu].sost == False:
        num=randint(1, len(sp))
        base_game[n_game].slov=sp[num]
        print(base_game[n_game].time_start)
        print(base_game[n_game].slov)
        base_game[n_game].slov_sh=len(base_game[n_game].slov)*"*"
        base_game[n_game].sost=True
        await message.answer(text=f'–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n'
                             f'–í–∞—à–µ —Å–ª–æ–≤–æ: {base_game[n_game].slov_sh}\n'
                             f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                             f'–ü–∏—à–∏ –±—É–∫–≤—ã –∏–ª–∏ —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º —á—Ç–æ –±—ã –≤—ã–π–≥—Ä–∞—Ç—å!',
                             reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
        so=prot(base_game, n_game, message.from_user.id)
        if so!=None:
                await bot.send_message(so, f'–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n'
                             f'–í–∞—à–µ —Å–ª–æ–≤–æ: {base_game[n_game].slov_sh}\n'
                             f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                             f'–ü–∏—à–∏ –±—É–∫–≤—ã –∏–ª–∏ —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º —á—Ç–æ –±—ã –≤—ã–π–≥—Ä–∞—Ç—å!',
                             reply_markup=ReplyKeyboardRemove(remove_keyboard=True))


#—É–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä
@router.message(F.text=="–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É")
async def sel_game(message: Message):
    nur=num_u(base_game, message.from_user.id)
    if nur!=52:
        base_game.pop(nur)
        us_in_game.remove(message.from_user.id)
        await message.answer(text= "–ò–≥—Ä–∞ —É–¥–∞–ª–µ–Ω–∞")
        await message.answer(text=open_panel(base_game),
                         reply_markup=open_sour(base_game))
    else:
        await message.answer(text="–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∏–≥—Ä—ã")
        await message.answer(text=open_panel(base_game),
                         reply_markup=open_sour(base_game))

#–æ—Ç–≥–∞–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –±—É–∫–≤—ã
@router.message((F.text & F.from_user.id.in_(us_in_game)))
async def otg(message: Message, bot: Bot):
    nu=num_u(base_game, message.from_user.id)
    if len(message.text)==1:
        if base_game[nu].sost==True and (message.text).lower() in base_game[nu].slov and (message.text).lower() not in base_game[nu].slov_sh:
            base_game[nu].slov_sh=bucv_otg(message.text, base_game[nu].slov, base_game[nu].slov_sh)
            top_up(message.from_user.id)
            wh=bal(base_game, nu, 1, message.from_user.id)
            if wh==1:
                base_game[nu].s1_bal+=1
            if wh==2:
                base_game[nu].s2_bal+=1
            await message.answer(text=f"–ü—Ä–∞–≤–∏–ª—å–Ω–æ!\n"
                                 f'–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +1 –±–∞–ª–ª –≤ —Ä–µ–π—Ç–∏–Ω–≥—É!\n'
                                 f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                           f'–¢–µ–ø–µ—Ä—å —Å–ª–æ–≤–æ: {base_game[nu].slov_sh}')
            so=prot(base_game, nu, message.from_user.id)
            if so!=None:
                await bot.send_message(so, f"–í–∞—à —Å–æ–ø–µ—Ä–Ω–∏–∫ –æ—Ç–≥–∞–¥–∞–ª –±—É–∫–≤—É!\n"
                                       f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                           f'–¢–µ–ø–µ—Ä—å —Å–ª–æ–≤–æ: {base_game[nu].slov_sh}'
                )
        else:
            if base_game[nu].sost==True:
                await message.answer(text="–£–≤—ã, –Ω–æ —Ç–∞–∫–æ–π –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ –Ω–µ—Ç!")
            else:
                await message.answer(text="–ò–≥—Ä–∞ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å")
        if base_game[nu].sost==True and base_game[nu].slov_sh==base_game[nu].slov:
            top_up(message.from_user.id)
            wh=bal(base_game, nu, 1, message.from_user.id)
            if wh==1:
                base_game[nu].s1_bal+=1
            if wh==2:
                base_game[nu].s2_bal+=1
            await message.answer(text=f'–ò–¥–µ–∞–ª—å–Ω–æ!\n'
                                 f'–í—Å–µ –±—É–∫–≤—ã –æ—Ç–≥–∞–¥–∞–Ω—ã!\n'
                                 f'–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +1 —Ä–µ–π—Ç–∏–Ω–≥\n'
                                 f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                                 f'–°–ª–æ–≤–æ –±—ã–ª–æ: {base_game[nu].slov}')
            so=prot(base_game, nu, message.from_user.id)
            if so!=None:
                await bot.send_message(so, f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n'
                                 f'–í—Å–µ –±—É–∫–≤—ã –æ—Ç–≥–∞–¥–∞–Ω—ã!\n'
                                 f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                                 f'–°–ª–æ–≤–æ –±—ã–ª–æ: {base_game[nu].slov}')
                us_in_game.remove(so)
            us_in_game.remove(message.from_user.id)
            base_game.pop(nu)
    elif len(message.text)==len(base_game[nu].slov):
        if (message.text).lower()==base_game[nu].slov:
            bals=(len(base_game[nu].slov)-base_game[nu].s1_bal-base_game[nu].s2_bal)
            wh=bal(base_game, nu, 1, message.from_user.id)
            if wh==1:
                base_game[nu].s1_bal+=bals
            if wh==2:
                base_game[nu].s2_bal+=bals
            top_up5(message.from_user.id, bals)# --------------------------------
            await message.answer(text=f'–ò–¥–µ–∞–ª—å–Ω–æ!\n'
                                 f'–¢—ã –æ—Ç–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ!\n'
                                 f'–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +{bals} –∫ —Ä–µ–π—Ç–∏–Ω–≥—É\n'
                                 f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                                 f'–°–ª–æ–≤–æ –±—ã–ª–æ: {base_game[nu].slov}')
            so=prot(base_game, nu, message.from_user.id)
            if so!=None:
                await bot.send_message(so, f"–í–∞—à —Å–æ–ø–µ—Ä–Ω–∏–∫ –æ—Ç–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é!\n"
                                       f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏\n'
                                       f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                           f'—Å–ª–æ–≤–æ –±—ã–ª–æ: {base_game[nu].slov}')
                us_in_game.remove(so)
            us_in_game.remove(message.from_user.id)
            base_game.pop(nu)
        else:
            await message.answer(text="–£–≤—ã, –Ω–æ —ç—Ç–æ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ")






#–≤—Ö–æ–¥ –≤ –∏–≥—Ä—É —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —é–∑–µ—Ä–∞
@router.message(F.text[:4]=="–ò–≥—Ä–∞")
async def game_in(message: Message):
    print("fff")
    nu=int(message.text[-1])-1
    if base_game[nu].us2==None:
        base_game[nu].us2=message.from_user.id
        base_game[nu].n_us2=message.from_user.username
        us_in_game.append(message.from_user.id)
        print(us_in_game)
        await message.answer(text=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –∑–∞—à–ª–∏ –≤ –∏–≥—Ä—É!\n"
                            f'–í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: {base_game[nu].n_us1}\n'
                            f'–°—á–µ—Ç: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}\n'
                    f'–û—Ç–≥–∞–¥—ã–≤–∞–π—Ç–µ –±—É–∫–≤—ã –∏–ª–∏ —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º',
                    reply_markup=clava_st_game())
    else:
        print("ddd")
        await message.answer(text=f"–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å\n"
                       f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫ –Ω–µ–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è\n\n'
                       f'–°—á–µ—Ç –∏–≥—Ä—ã: {base_game[nu].n_us1} {base_game[nu].s1_bal}:{base_game[nu].s2_bal} {base_game[nu].n_us2}')
