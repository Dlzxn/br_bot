from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram import Bot, Dispatcher, F
from aiogram import Bot, Dispatcher, F, Router
from aiogram.filters import Command, CommandStart, StateFilter, CommandObject
from aiogram.filters.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.types import (CallbackQuery, InlineKeyboardButton,
                           InlineKeyboardMarkup, Message, PhotoSize)
from dotenv import load_dotenv
import os
import sqlite3
from aiogram.types import FSInputFile
from aiogram.utils.deep_linking import create_start_link, decode_payload
from aiogram import types
import base64
import logging.config
import logging
from random import randint
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage



from func.defs import from_bd, ref_prov, db_table_val, pict, pict_prov, pict_us, new_us_kl
from log_cfg.log_def import start_log, user_new
from keyboard.keyb import kb_menu, like_menu, num_key, raska, num_buy
from us_r.cla import FSMF

storage = MemoryStorage()
router = Router()

user_dict: dict[int, dict[str]] = {}


@router.message(Command(commands=['help']))
async def process_help_command(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç –ª—é–±–∏—Ç–µ–ª—è–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π –ë–µ–ª–∞—Ä—É—Å–∏!\n'
                         f'–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç bot v1.0 by Dlzxn'
                         f'–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ /start'
                         )

@router.message(Command(commands="start"))
async def start(message:Message):
    if ref_prov(message.from_user.id)==False:
        us_id = message.from_user.id
        us_name = message.from_user.first_name
        us_sname = message.from_user.last_name
        username = message.from_user.username
        db_table_val(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username)
        user_new(us_name, us_id)
    await message.reply_photo(photo=FSInputFile('main_img/menu.jpg'),
                              caption='–ë–µ–ª–∞—Ä—É—Å—å –≥–æ—Ä–¥–∏–ª–∞—Å—å –±—ã –≤–∞–º–∏!',
                              reply_markup=kb_menu
                              )

#–±–ª–æ–∫ —Ñ—Å–º–∞-------------------------------------------------------------------------------

nu=0
#–∑–∞–ø—Ä–æ—Å –º—É–∑—ã–∫–∏
@router.message((F.text=="–ë–µ–ª–∞—Ä—É—Å—Å–∫–∞—è –ú—É–∑—ã–∫–∞üéº") | (F.text=='üëé'))
async def mus(message: Message, state: FSMContext):
    global nu
    nu=randint(1, 2)
    s='music/'+str(nu)+"b.mp3"
    # await message.reply_document(document=FSInputFile('music/1.mp3'))
    await message.answer_audio(audio=FSInputFile(s, 'rb'), protect_content=True,
                              reply_markup=like_menu,
                              caption=f'–ï—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å-–∂–º–∏ ‚ù§Ô∏è\n'
                              f'–ò —Å–ª—É—à–∞–π –æ—Ä–∏–≥–∏–Ω–∞–ª!\n'
                              f'–ï—Å–ª–∏ –Ω–µ—Ç-üëé'
                              )
    await state.set_state(FSMF.text)




@router.message(StateFilter(FSMF.text), F.text=='‚ù§Ô∏è') #StateFilter(FSMF.text), ((F.text =="üëé") or (F.text =="‚ù§Ô∏è"))
async def process_name_sent(message: Message, state: FSMContext, bot: Bot):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "name"
    s='music/'+str(nu)+".mp3"
    await message.answer_audio(audio=FSInputFile(s, 'rb'), protect_content=True,
                              reply_markup=like_menu,
                              caption=f'–ü—Ä–æ–Ω–∏–∫–Ω–∏—Å—å –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–º —à–µ–¥–µ–≤—Ä–æ–º!')
    # await state.update_data(text=message.sticker)
    # user_dict[message.from_user.id] = await state.get_data()
    # await state.clear()
    await state.set_state(state=None)

#–∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–∑–¥–µ–ª —Ñ—Å–º--------------------------------------------------------------------------------------



#–ë–õ–û–ö –†–ê–ó–î–ï–õ–ê –†–ò–°–û–í–ê–ù–ù–´–ô –§–õ–ê–ì-----------------------------------------------------------------------------
@router.message(F.text=="–†–∞—Å–∫—Ä–∞—Å–∫–∞")
async def rask(message:Message):
    s1, s2, s3, s4=pict()
    await message.answer(text=f'–†–∞—Å–∫—Ä–∞—Å—å —Ñ–ª–∞–≥ –ë–µ–ª–æ—Ä—É—Å–∏üáßüáæ\n'
                         f'{s1}\n'
                         f'{s2}\n'
                         f'{s3}\n'
                         f'{s4}\n',
                         reply_markup=num_key)

#–≤—ã–±–æ—Ä –ø–æ –Ω–æ–º–µ—Ä—É
@router.message(F.text.in_([str(i) for i in range(1, 21)]))
async def chislo(message: Message):
    if pict_prov(message.text)==True:
        await message.answer_photo(photo=FSInputFile('main_img/user.jpg'),
                                   caption=f'–î–∞–Ω–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∞!\n'
                                   f'–í–ª–∞–¥–µ–ª–µ—Ü: {pict_us(message.text)}\n'
                                   f'–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è!\n'
                                   f'–ï—Å—Ç—å –µ—â–µ –º–Ω–æ–≥–æ –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–ª–µ—Ç–æ–∫!',
                                   reply_markup=raska
                                   )
    else:
        await message.answer_photo(photo=FSInputFile('main_img/us_tr.jpg'),
                                   caption=f'–î–∞–Ω–Ω–∞—è –∫–ª–µ—Ç–∫–∞ –µ—â–µ –Ω–µ –∑–∞–Ω—è—Ç–∞!\n'
                                   f'–°–∫–æ—Ä–µ–µ –∑–∞–Ω–∏–º–∞–π!',
                                   reply_markup=num_buy
                                   )
        global kle
        kle=message.text

#–∑–∞–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ
@router.message(F.text=="–ó–∞–∫—Ä–∞—Å–∏—Ç—å")
async def zacr_kl(message: Message):
    new_us_kl(kle, message.from_user.id, message.from_user.first_name, message.from_user.username)
    await message.answer(text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –∑–∞–∫—Ä–∞—Å–∏–ª–∏ –∫–ª–µ—Ç–∫—É {kle}!\n'
                         f'–¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –∫–ª–µ—Ç–∫–∏:')
    await message.answer_photo(photo=FSInputFile('main_img/user.jpg'),
                                   caption=f'–î–∞–Ω–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∞!\n'
                                   f'–°—Ç–∞—Ç—É—Å: –∑–∞–∫—Ä–∞—à–µ–Ω–∞'
                                   f'–í–ª–∞–¥–µ–ª–µ—Ü: {pict_us(kle)}\n',
                                   reply_markup=raska
                                   )
